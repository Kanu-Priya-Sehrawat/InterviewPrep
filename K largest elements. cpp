vector<int> kLargest(int arr[], int n, int k)
    {
        // code here
        vector<int> res;
        priority_queue<int, vector<int>, greater<int>> minHeap;
        for(int i=0; i<k; i++)
        minHeap.push(arr[i]);
        for(int i=k; i<n; i++){
            if(arr[i]>minHeap.top()){
                minHeap.pop();
                minHeap.push(arr[i]);
            }
        }
        while(!minHeap.empty()){
            res.push_back(minHeap.top());
            minHeap.pop();
        }
        reverse(res.begin(), res.end());
        return res;
    }
